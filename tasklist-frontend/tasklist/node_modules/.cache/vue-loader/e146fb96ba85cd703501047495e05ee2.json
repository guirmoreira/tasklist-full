{"remainingRequest":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\src\\components\\popups\\PopupNewTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\src\\components\\popups\\PopupNewTask.vue","mtime":1628863821990},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgdGFza3MgZnJvbSAiLi4vLi4vc2VydmljZXMvdGFza3MiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBwcm9wczogWyJ1cGRhdGVMaXN0Il0sDQoNCiAgZGF0YTogKCkgPT4gKHsNCiAgICB0b2RheTogbmV3IERhdGUoRGF0ZS5ub3coKSAtIG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCksDQogICAgdmFsaWQ6IGZhbHNlLA0KICAgIGRpYWxvZzogZmFsc2UsDQogICAgdGFzazogew0KICAgICAgdGl0bGU6ICIiLA0KICAgICAgZGVzY3JpcHRpb246ICIiLA0KICAgICAgc3RhdHVzOiAiIiwNCiAgICAgIGRhdGVDb25jbHVzaW9uOiAiIiwNCiAgICB9LA0KICAgIGl0ZW1zOiBbIkFCRVJUQSIsICJFTV9BTkRBTUVOVE8iLCAiQ09OQ0xVw41EQSJdLA0KICAgIHBpY2tlcjogbmV3IERhdGUoRGF0ZS5ub3coKSAtIG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKQ0KICAgICAgLnRvSVNPU3RyaW5nKCkNCiAgICAgIC5zdWJzdHIoMCwgMTApLA0KICAgIGRhdGU6ICIiLA0KICAgIG1lbnU6IGZhbHNlLA0KICAgIG1vZGFsOiBmYWxzZSwNCiAgICBtZW51MjogZmFsc2UsDQogICAgaW5wdXRUaXRsZVJ1bGVzOiBbDQogICAgICB2ID0+ICEhdiB8fCAnTyB0w610dWxvIMOpIG9icmlnYXTDs3JpbycsDQogICAgICB2ID0+ICB2Lmxlbmd0aCA+PSA4IHx8ICdUYW1hbmhvIG3DrW5pbW8gZGUgOCBjYXJhY3RlcmVzJw0KICAgIF0sDQogICAgIGlucHV0U3RhdHVzUnVsZXM6IFsNCiAgICAgIHYgPT4gISF2IHx8ICdPIHN0YXR1cyDDqSBvYnJpZ2F0w7NyaW8nDQogICAgXSwNCiAgICAgaW5wdXREYXRlUnVsZXM6IFsNCiAgICAgIHYgPT4gISF2IHx8ICdBIGRhdGEgZGUgY29uY2x1c8OjbyDDqSBvYnJpZ2F0w7NyaWEnDQogICAgXSwNCiAgfSksDQoNCiAgd2F0Y2g6IHsNCiAgICBwaWNrZXIoKSB7DQogICAgICB0aGlzLnRhc2suZGF0ZUNvbmNsdXNpb24gPSB0aGlzLnBpY2tlcjsNCiAgICAgIHRoaXMuZGF0ZSA9IHRoaXMuZm9ybWF0RGF0ZSh0aGlzLnBpY2tlcik7DQogICAgfSwNCiAgfSwNCg0KICBtZXRob2RzOiB7DQogICAgc3VibWl0KCkgew0KICAgICAgaWYgKHRoaXMudmFsaWQpIHsNCiAgICAgICAgdGFza3MuY3JlYXRlVGFzayh0aGlzLnRhc2spLnRoZW4oKCkgPT4gew0KICAgICAgICAgIHRoaXMuJHBhcmVudC5saXN0KCk7DQogICAgICAgICAgdGhpcy4kcGFyZW50LiRmb3JjZVVwZGF0ZTsNCiAgICAgICAgfSk7DQogICAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2U7DQogICAgICB9DQogICAgfSwNCiAgICBmb3JtYXREYXRlKHBpY2tlcikgew0KICAgICAgY29uc3QgW3llYXIsIG1vbnRoLCBkYXldID0gcGlja2VyLnNwbGl0KCItIik7DQogICAgICByZXR1cm4gYCR7ZGF5fS8ke21vbnRofS8ke3llYXJ9YDsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["PopupNewTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopupNewTask.vue","sourceRoot":"src/components/popups","sourcesContent":["<template>\r\n  <v-dialog max-width=\"900px\" v-model=\"dialog\">\r\n    <template v-slot:activator=\"{ on, attrs }\">\r\n      <v-btn\r\n        flat\r\n        class=\"green darken-1 white--text success\"\r\n        slot=\"activation\"\r\n        v-bind=\"attrs\"\r\n        v-on=\"on\"\r\n        large\r\n      >\r\n        Nova Tarefa\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card>\r\n      <v-card-title class=\"pb-8\">\r\n        <h5 class=\"text--subtitle\">CRIAR NOVA TAREFA</h5>\r\n      </v-card-title>\r\n\r\n      <v-card-text>\r\n        <v-form v-model=\"valid\">\r\n          <v-text-field\r\n            label=\"Título\"\r\n            v-model=\"task.title\"\r\n            filled\r\n            dense\r\n            clearable\r\n            required\r\n            maxlength=\"64\"\r\n            :rules=\"inputTitleRules\"\r\n          ></v-text-field>\r\n          <v-text-field\r\n            label=\"Descrição\"\r\n            v-model=\"task.description\"\r\n            filled\r\n            dense\r\n            clearable\r\n            required\r\n            maxlength=\"256\"\r\n          >\r\n            <template v-slot:label>\r\n              <div>Descrição <small>(opcional)</small></div>\r\n            </template>\r\n          </v-text-field>\r\n          <v-select\r\n            label=\"Status\"\r\n            v-model=\"task.status\"\r\n            :items=\"items\"\r\n            filled\r\n            :rules=\"inputStatusRules\"\r\n          ></v-select>\r\n          <v-menu\r\n            ref=\"menu\"\r\n            v-model=\"menu\"\r\n            :close-on-content-click=\"false\"\r\n            :return-value.sync=\"date\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            min-width=\"auto\"\r\n          >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field\r\n                v-model=\"date\"\r\n                label=\"Data de Entrega\"\r\n                prepend-icon=\"mdi-calendar\"\r\n                readonly\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n                :rules=\"inputDateRules\"\r\n              ></v-text-field>\r\n            </template>\r\n            <v-date-picker v-model=\"picker\" no-title scrollable :min=\"today\">\r\n              <v-spacer></v-spacer>\r\n              <v-btn text color=\"primary\" @click=\"menu = false\">\r\n                Cancelar\r\n              </v-btn>\r\n              <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">\r\n                OK\r\n              </v-btn>\r\n            </v-date-picker>\r\n          </v-menu>\r\n        </v-form>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <v-btn color=\"red darken-1\" text @click=\"dialog = false\">\r\n          Cancelar\r\n        </v-btn>\r\n\r\n        <v-spacer></v-spacer>\r\n        <v-btn color=\"green darken-1\" text @click=\"submit\"> Salvar </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport tasks from \"../../services/tasks\";\r\nexport default {\r\n  props: [\"updateList\"],\r\n\r\n  data: () => ({\r\n    today: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\r\n    valid: false,\r\n    dialog: false,\r\n    task: {\r\n      title: \"\",\r\n      description: \"\",\r\n      status: \"\",\r\n      dateConclusion: \"\",\r\n    },\r\n    items: [\"ABERTA\", \"EM_ANDAMENTO\", \"CONCLUÍDA\"],\r\n    picker: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\r\n      .toISOString()\r\n      .substr(0, 10),\r\n    date: \"\",\r\n    menu: false,\r\n    modal: false,\r\n    menu2: false,\r\n    inputTitleRules: [\r\n      v => !!v || 'O título é obrigatório',\r\n      v =>  v.length >= 8 || 'Tamanho mínimo de 8 caracteres'\r\n    ],\r\n     inputStatusRules: [\r\n      v => !!v || 'O status é obrigatório'\r\n    ],\r\n     inputDateRules: [\r\n      v => !!v || 'A data de conclusão é obrigatória'\r\n    ],\r\n  }),\r\n\r\n  watch: {\r\n    picker() {\r\n      this.task.dateConclusion = this.picker;\r\n      this.date = this.formatDate(this.picker);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    submit() {\r\n      if (this.valid) {\r\n        tasks.createTask(this.task).then(() => {\r\n          this.$parent.list();\r\n          this.$parent.$forceUpdate;\r\n        });\r\n        this.dialog = false;\r\n      }\r\n    },\r\n    formatDate(picker) {\r\n      const [year, month, day] = picker.split(\"-\");\r\n      return `${day}/${month}/${year}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}