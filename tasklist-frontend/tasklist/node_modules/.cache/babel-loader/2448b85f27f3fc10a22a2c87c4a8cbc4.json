{"remainingRequest":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\src\\components\\popups\\PopupNewTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\src\\components\\popups\\PopupNewTask.vue","mtime":1628863821990},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\guilhermeribeiro\\GitHub\\tasklist-full\\tasklist-frontend\\tasklist\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzL2d1aWxoZXJtZXJpYmVpcm8vR2l0SHViL3Rhc2tsaXN0LWZ1bGwvdGFza2xpc3QtZnJvbnRlbmQvdGFza2xpc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB0YXNrcyBmcm9tICIuLi8uLi9zZXJ2aWNlcy90YXNrcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJ1cGRhdGVMaXN0Il0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvZGF5OiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gbmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSwKICAgICAgdmFsaWQ6IGZhbHNlLAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICB0YXNrOiB7CiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICBzdGF0dXM6ICIiLAogICAgICAgIGRhdGVDb25jbHVzaW9uOiAiIgogICAgICB9LAogICAgICBpdGVtczogWyJBQkVSVEEiLCAiRU1fQU5EQU1FTlRPIiwgIkNPTkNMVcONREEiXSwKICAgICAgcGlja2VyOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gbmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSwKICAgICAgZGF0ZTogIiIsCiAgICAgIG1lbnU6IGZhbHNlLAogICAgICBtb2RhbDogZmFsc2UsCiAgICAgIG1lbnUyOiBmYWxzZSwKICAgICAgaW5wdXRUaXRsZVJ1bGVzOiBbZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gISF2IHx8ICdPIHTDrXR1bG8gw6kgb2JyaWdhdMOzcmlvJzsKICAgICAgfSwgZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdi5sZW5ndGggPj0gOCB8fCAnVGFtYW5obyBtw61uaW1vIGRlIDggY2FyYWN0ZXJlcyc7CiAgICAgIH1dLAogICAgICBpbnB1dFN0YXR1c1J1bGVzOiBbZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gISF2IHx8ICdPIHN0YXR1cyDDqSBvYnJpZ2F0w7NyaW8nOwogICAgICB9XSwKICAgICAgaW5wdXREYXRlUnVsZXM6IFtmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiAhIXYgfHwgJ0EgZGF0YSBkZSBjb25jbHVzw6NvIMOpIG9icmlnYXTDs3JpYSc7CiAgICAgIH1dCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHBpY2tlcjogZnVuY3Rpb24gcGlja2VyKCkgewogICAgICB0aGlzLnRhc2suZGF0ZUNvbmNsdXNpb24gPSB0aGlzLnBpY2tlcjsKICAgICAgdGhpcy5kYXRlID0gdGhpcy5mb3JtYXREYXRlKHRoaXMucGlja2VyKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudmFsaWQpIHsKICAgICAgICB0YXNrcy5jcmVhdGVUYXNrKHRoaXMudGFzaykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy4kcGFyZW50Lmxpc3QoKTsKCiAgICAgICAgICBfdGhpcy4kcGFyZW50LiRmb3JjZVVwZGF0ZTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmRpYWxvZyA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZShwaWNrZXIpIHsKICAgICAgdmFyIF9waWNrZXIkc3BsaXQgPSBwaWNrZXIuc3BsaXQoIi0iKSwKICAgICAgICAgIF9waWNrZXIkc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX3BpY2tlciRzcGxpdCwgMyksCiAgICAgICAgICB5ZWFyID0gX3BpY2tlciRzcGxpdDJbMF0sCiAgICAgICAgICBtb250aCA9IF9waWNrZXIkc3BsaXQyWzFdLAogICAgICAgICAgZGF5ID0gX3BpY2tlciRzcGxpdDJbMl07CgogICAgICByZXR1cm4gIiIuY29uY2F0KGRheSwgIi8iKS5jb25jYXQobW9udGgsICIvIikuY29uY2F0KHllYXIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PopupNewTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA,OAAA,KAAA,MAAA,sBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,YAAA,CADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,IAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,IAAA,IAAA,GAAA,iBAAA,KAAA,KAAA,EAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CADA;AAEA,MAAA,KAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA,KAHA;AAIA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,cAAA,EAAA;AAJA,OAJA;AAUA,MAAA,KAAA,EAAA,CAAA,QAAA,EAAA,cAAA,EAAA,WAAA,CAVA;AAWA,MAAA,MAAA,EAAA,IAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,IAAA,IAAA,GAAA,iBAAA,KAAA,KAAA,EACA,WADA,GAEA,MAFA,CAEA,CAFA,EAEA,EAFA,CAXA;AAcA,MAAA,IAAA,EAAA,EAdA;AAeA,MAAA,IAAA,EAAA,KAfA;AAgBA,MAAA,KAAA,EAAA,KAhBA;AAiBA,MAAA,KAAA,EAAA,KAjBA;AAkBA,MAAA,eAAA,EAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,wBAAA;AAAA,OADA,EAEA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,IAAA,CAAA,IAAA,gCAAA;AAAA,OAFA,CAlBA;AAsBA,MAAA,gBAAA,EAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,wBAAA;AAAA,OADA,CAtBA;AAyBA,MAAA,cAAA,EAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,mCAAA;AAAA,OADA;AAzBA,KAAA;AAAA,GAHA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,IAAA,CAAA,cAAA,GAAA,KAAA,MAAA;AACA,WAAA,IAAA,GAAA,KAAA,UAAA,CAAA,KAAA,MAAA,CAAA;AACA;AAJA,GAjCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,KAAA,IAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,YAAA;AACA,SAHA;AAIA,aAAA,MAAA,GAAA,KAAA;AACA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,MAVA,EAUA;AACA,0BAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA;AAAA,UAAA,IAAA;AAAA,UAAA,KAAA;AAAA,UAAA,GAAA;;AACA,uBAAA,GAAA,cAAA,KAAA,cAAA,IAAA;AACA;AAbA;AAxCA,CAAA","sourcesContent":["<template>\r\n  <v-dialog max-width=\"900px\" v-model=\"dialog\">\r\n    <template v-slot:activator=\"{ on, attrs }\">\r\n      <v-btn\r\n        flat\r\n        class=\"green darken-1 white--text success\"\r\n        slot=\"activation\"\r\n        v-bind=\"attrs\"\r\n        v-on=\"on\"\r\n        large\r\n      >\r\n        Nova Tarefa\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card>\r\n      <v-card-title class=\"pb-8\">\r\n        <h5 class=\"text--subtitle\">CRIAR NOVA TAREFA</h5>\r\n      </v-card-title>\r\n\r\n      <v-card-text>\r\n        <v-form v-model=\"valid\">\r\n          <v-text-field\r\n            label=\"Título\"\r\n            v-model=\"task.title\"\r\n            filled\r\n            dense\r\n            clearable\r\n            required\r\n            maxlength=\"64\"\r\n            :rules=\"inputTitleRules\"\r\n          ></v-text-field>\r\n          <v-text-field\r\n            label=\"Descrição\"\r\n            v-model=\"task.description\"\r\n            filled\r\n            dense\r\n            clearable\r\n            required\r\n            maxlength=\"256\"\r\n          >\r\n            <template v-slot:label>\r\n              <div>Descrição <small>(opcional)</small></div>\r\n            </template>\r\n          </v-text-field>\r\n          <v-select\r\n            label=\"Status\"\r\n            v-model=\"task.status\"\r\n            :items=\"items\"\r\n            filled\r\n            :rules=\"inputStatusRules\"\r\n          ></v-select>\r\n          <v-menu\r\n            ref=\"menu\"\r\n            v-model=\"menu\"\r\n            :close-on-content-click=\"false\"\r\n            :return-value.sync=\"date\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            min-width=\"auto\"\r\n          >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field\r\n                v-model=\"date\"\r\n                label=\"Data de Entrega\"\r\n                prepend-icon=\"mdi-calendar\"\r\n                readonly\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n                :rules=\"inputDateRules\"\r\n              ></v-text-field>\r\n            </template>\r\n            <v-date-picker v-model=\"picker\" no-title scrollable :min=\"today\">\r\n              <v-spacer></v-spacer>\r\n              <v-btn text color=\"primary\" @click=\"menu = false\">\r\n                Cancelar\r\n              </v-btn>\r\n              <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">\r\n                OK\r\n              </v-btn>\r\n            </v-date-picker>\r\n          </v-menu>\r\n        </v-form>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <v-btn color=\"red darken-1\" text @click=\"dialog = false\">\r\n          Cancelar\r\n        </v-btn>\r\n\r\n        <v-spacer></v-spacer>\r\n        <v-btn color=\"green darken-1\" text @click=\"submit\"> Salvar </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport tasks from \"../../services/tasks\";\r\nexport default {\r\n  props: [\"updateList\"],\r\n\r\n  data: () => ({\r\n    today: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\r\n    valid: false,\r\n    dialog: false,\r\n    task: {\r\n      title: \"\",\r\n      description: \"\",\r\n      status: \"\",\r\n      dateConclusion: \"\",\r\n    },\r\n    items: [\"ABERTA\", \"EM_ANDAMENTO\", \"CONCLUÍDA\"],\r\n    picker: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\r\n      .toISOString()\r\n      .substr(0, 10),\r\n    date: \"\",\r\n    menu: false,\r\n    modal: false,\r\n    menu2: false,\r\n    inputTitleRules: [\r\n      v => !!v || 'O título é obrigatório',\r\n      v =>  v.length >= 8 || 'Tamanho mínimo de 8 caracteres'\r\n    ],\r\n     inputStatusRules: [\r\n      v => !!v || 'O status é obrigatório'\r\n    ],\r\n     inputDateRules: [\r\n      v => !!v || 'A data de conclusão é obrigatória'\r\n    ],\r\n  }),\r\n\r\n  watch: {\r\n    picker() {\r\n      this.task.dateConclusion = this.picker;\r\n      this.date = this.formatDate(this.picker);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    submit() {\r\n      if (this.valid) {\r\n        tasks.createTask(this.task).then(() => {\r\n          this.$parent.list();\r\n          this.$parent.$forceUpdate;\r\n        });\r\n        this.dialog = false;\r\n      }\r\n    },\r\n    formatDate(picker) {\r\n      const [year, month, day] = picker.split(\"-\");\r\n      return `${day}/${month}/${year}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components/popups"}]}